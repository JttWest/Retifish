### NGINX config for Retifish ###
# place in /etc/nginx/sites-available
# ln -s /etc/nginx/sites-available/retifish.conf /etc/nginx/sites-enabled/retifish.conf
# systemctl restart nginx

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name www.retifish.com;

  root /home/retifish/public;
  index index.html;

  location / {
    try_files $uri $uri/ /index.html;

    gzip on;
    gzip_types application/javascript image/* text/css;
    gunzip on;
  }

  ssl_certificate /etc/letsencrypt/live/retifish.com/fullchain.pem; 
  ssl_certificate_key /etc/letsencrypt/live/retifish.com/privkey.pem;
}

# redirect non-www to www
server {
  #listen 80
  #listen [::]:80;
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name retifish.com;

  ssl_certificate /etc/letsencrypt/live/retifish.com/fullchain.pem; 
  ssl_certificate_key /etc/letsencrypt/live/retifish.com/privkey.pem;

  return 301 https://www.retifish.com$request_uri;
}

# service subdomain
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name service.retifish.com;

  # if ($request_method = 'OPTIONS') {
  #   add_header 'Access-Control-Allow-Origin' '*';
  #   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
  #   # Custom headers and headers various browsers *should* be OK with but aren't
  #   add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
  #   # Tell client that this pre-flight info is valid for 20 days
  #   add_header 'Access-Control-Max-Age' 1728000;
  #   add_header 'Content-Type' 'text/plain; charset=utf-8';
  #   add_header 'Content-Length' 0;
  #   return 204;
  # }

  # add_header 'Access-Control-Allow-Origin' 'https://www.retifish.com';
  # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
  # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
  # add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Content-Disposition';

  location /api {
    proxy_pass http://localhost:9090;
  }
  
  location /websocket {
    proxy_pass http://localhost:9090;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 1d;
  }

  ssl_certificate /etc/letsencrypt/live/retifish.com/fullchain.pem; 
  ssl_certificate_key /etc/letsencrypt/live/retifish.com/privkey.pem;
}

# redirect all http requests to https
server {
  listen 80;
  listen [::]:80;
  server_name retifish.com *.retifish.com;
  rewrite ^ https://$host$request_uri? permanent;
}
